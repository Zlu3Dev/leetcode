class Solution:
    def partial(self, x):
        return x * (x + 1) // 2
    
    def maxValue(self, n: int, index: int, maxSum: int) -> int:
        def check(num):
            r = n - index - 1 # number of elements on the right
            l = index # number of elements on the left
            count = num
            if num <= l + 1:
                count += self.partial(num - 1) + l - num + 1
            else:
                count += self.partial(num - 1) - self.partial(num - l - 1)

            if num <= r + 1:
                count += self.partial(num - 1) + r - num + 1
            else:
                count += self.partial(num - 1) - self.partial(num - r - 1)

            return count <= maxSum
        
        left, right = 1, maxSum
        while left < right:
            mid = (left + right) // 2
            if check(mid):
                left = mid + 1
            else:
                right = mid

        if check(left):
            return left
        
        return left - 1
