/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
// if(root == null || root == p || root == q) return root;
        // TreeNode left = lowestCommonAncestor(root.left,p,q);
        // TreeNode right = lowestCommonAncestor(root.right,p,q);
        // if(left != null && right != null) return root;
        // return left != null ? left : right;
        TreeNode n = root;
        if(n.val >= p.val && n.val <= q.val){
            return n;
        }else if(n.val < p.val && n.val < q.val){//比左边小的子树找并且返回
            return lowestCommonAncestor(root.right,p,q);
        }else if(n.val > p.val && n.val > q.val ){//比右边小的子树找并且返回
            return lowestCommonAncestor(root.left,p,q);
        }
        return root;
    }
}
