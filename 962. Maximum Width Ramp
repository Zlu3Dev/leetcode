class Solution {
    public int maxWidthRamp(int[] nums) {
   // use stack, DESC
        // 1. traverse nums[]
        // 2. if nums[i] < stack.peek()
        // 3. traverse nums[] from right to left
        //  a. if nums[i] <= stack.peek(), update resMax
        //
        //
        
        Stack<Integer> stack = new Stack<>();
        stack.push(0);
        for(int i = 1; i < nums.length; i++) {
            if(nums[i] < nums[stack.peek()]) {
                stack.push(i);
            }
        }
        
        int resMax = 0;
        for(int i = nums.length - 1; i >= 0; i--) {
            while(!stack.isEmpty() && nums[stack.peek()] <= nums[i]) {
                resMax = Math.max(resMax, i - stack.peek());
                stack.pop();
            }
        }
        
        return resMax;
    }
}
