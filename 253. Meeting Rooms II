/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public int minMeetingRooms(Interval[] intervals) {
    int res =0;
    int count =0;
    int[] start = new int[intervals.length];
    int[] end = new int[intervals.length];
    for(int i= 0; i<intervals.length; i++){
        start[i] = intervals[i].start;
        end[i] = intervals[i].end;
    }
    Arrays.sort(start);
    Arrays.sort(end);//以上部分都和meeting room I一样
    int i=0;//然后定义两个point分别再start array和end array上遍历。
    int j=0;
    while(i<start.length&&j<end.length){
        if(start[i]<end[j]){//条件就是当start的i比end的j小的时候就把count计数器加进res中。
            count++;
            i++;
            res = Math.max(res,count);
        }
        else{
            count--;
            j++;
        }
    }
    return res; 
    }
}
