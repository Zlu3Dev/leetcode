class Solution {
    public int removeCoveredIntervals(int[][] intervals) {
    
        // Sort by start point.
        // If two intervals share the same start point,
        // put the longer one to be the first.
          Arrays.sort(intervals, (a, b) -> {
            if (a[0] == b[0]) {
                return Integer.compare(b[1], a[1]); 
            } 
            return Integer.compare(a[0], b[0]);
        });
        
        int right = Integer.MIN_VALUE;
        int count = 0;
        for (int[] interval : intervals) {
            // if current interval is not covered
            // by the previous one
            if (right < interval[1]) {
                count++;
                right = interval[1];
            }
        }
        
        return count;
    }
}
