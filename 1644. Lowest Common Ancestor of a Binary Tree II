/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
   
       private int count = 0;
    
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        TreeNode node = dfs(root, p, q);
        
        return count == 2 ? node : null;
    }
    
    private TreeNode dfs(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null) {
            return root;
        }
        
        TreeNode leftValue = dfs(root.left, p, q);
        TreeNode rightValue = dfs(root.right, p, q);
        
        if (leftValue != null && rightValue != null) {
            return root;
        }
        
        if (root == p || root == q) {
            count ++;
            
            return root;
        }
        
        return leftValue == null  ? rightValue : leftValue;
    }
}
