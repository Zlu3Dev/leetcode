class Solution:
    def minSubarray(self, nums: List[int], p: int) -> int:
        if sum(nums)<p:
            return -1
        if sum(nums)%p==0:
            return 0
        n = len(nums)
        reminder = 0
        for i in range(len(nums)):
            reminder = (reminder+nums[i])%p
        minlen = n
        pre_map = {}
        prefixsum = 0
        pre_map[0]=-1
        for i in range(len(nums)):
            prefixsum = (prefixsum + nums[i])%p
            key = (prefixsum-reminder+p)%p
            if key in pre_map:
                minlen = min(minlen, i-pre_map[key])
            
            pre_map[prefixsum]=i
        if minlen==n:
            return -1
        return minlen
