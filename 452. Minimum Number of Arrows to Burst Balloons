class Solution {
    /*
    我们首先将气球按照end从小到大进行排序，首先将第一个气球的end作为参考。
从左到右遍历，若当前气球的起点小于等于参考点则continue；
若当前气球的起点大于参考点，则将参考点更新为当前气球的终点，同时答案+1。
    */
    public int findMinArrowShots(int[][] points) {
        if (points == null || points.length == 0) return 0;
        Arrays.sort(points, new IntervalComparator());
        int ans = 1;
        int lastEnd = points[0][1];
        for(int i = 1; i < points.length; i++) {
            if (points[i][0] > lastEnd) {
                ans++;
                lastEnd = points[i][1];
            }
        }
        return ans;
    }
    
    class IntervalComparator implements Comparator<int[]> {
        public int compare(int[] a, int[] b) {
            return a[1] - b[1];
        }
    }
}
